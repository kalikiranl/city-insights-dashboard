name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run tests with pytest
      run: |
        pytest tests/ --cov=./ --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        package: .
        
    - name: Deploy Databricks Notebooks
      uses: databricks/databricks-cli-action@v1
      with:
        databricks-host: ${{ secrets.DATABRICKS_HOST }}
        databricks-token: ${{ secrets.DATABRICKS_TOKEN }}
        command: workspace import_dir notebooks /Shared/city-insights-dashboard --overwrite
        
    - name: Deploy Data Factory Pipelines
      uses: azure/cli@v1
      with:
        inlineScript: |
          az datafactory pipeline create \
            --factory-name ${{ secrets.AZURE_DATA_FACTORY_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --pipeline-name "WeatherDataPipeline" \
            --pipeline @pipelines/weather/pipeline.json 